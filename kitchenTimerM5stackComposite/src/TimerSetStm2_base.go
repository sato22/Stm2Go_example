// This file was generated by a program.
// Please do not edit this file directly.
package mypackage

// package names to be imported

type TimerSetStm2State uint8

const (
	TimerSetStm2TimerIdle TimerSetStm2State = iota
	TimerSetStm2AddOneMin
	TimerSetStm2AddOneSec
	TimerSetStm2TimerWaitRelease
)

var TimerSetStm2Eod Eod

var TimerSetStm2CurrentState TimerSetStm2State

func init() {
	TimerSetStm2Initialize()
}

func TimerSetStm2Initialize() {
	TimerSetStm2CurrentState = TimerSetStm2TimerIdle
}

func TimerSetStm2Task() {
	switch TimerSetStm2CurrentState {
	case TimerSetStm2TimerIdle:
		if TimerSetStm2Eod == Entry {
			TimerSetStm2TimerIdleEntry()
			TimerSetStm2Eod = Do
		}
		if TimerSetStm2Eod == Do {
			TimerSetStm2TimerIdleDo()
			if TimerSetStm2TimerIdleSecButtonPushCond() {
				TimerSetStm2TimerIdleSecButtonPushAction()
				TimerSetStm2CurrentState = TimerSetStm2AddOneSec
				TimerSetStm2Eod = Exit
			}
			if TimerSetStm2TimerIdlestartButtonPushCond() {
				TimerSetStm2TimerIdlestartButtonPushAction()
				TimerSetStm2CurrentState = TimerSetStm2TimerWaitRelease
				TimerSetStm2Eod = Exit
			}
			if TimerSetStm2TimerIdleMinButtonPushCond() {
				TimerSetStm2TimerIdleMinButtonPushAction()
				TimerSetStm2CurrentState = TimerSetStm2AddOneMin
				TimerSetStm2Eod = Exit
			}
		}
		if TimerSetStm2Eod == Exit {
			TimerSetStm2TimerIdleExit()
			TimerSetStm2Eod = Entry
		}
	case TimerSetStm2AddOneMin:
		if TimerSetStm2Eod == Entry {
			TimerSetStm2AddOneMinEntry()
			TimerSetStm2Eod = Do
		}
		if TimerSetStm2Eod == Do {
			TimerSetStm2AddOneMinDo()
			if TimerSetStm2AddOneMinMinButtonReleaseCond() {
				TimerSetStm2AddOneMinMinButtonReleaseAction()
				TimerSetStm2CurrentState = TimerSetStm2TimerIdle
				TimerSetStm2Eod = Exit
			}
		}
		if TimerSetStm2Eod == Exit {
			TimerSetStm2AddOneMinExit()
			TimerSetStm2Eod = Entry
		}
	case TimerSetStm2AddOneSec:
		if TimerSetStm2Eod == Entry {
			TimerSetStm2AddOneSecEntry()
			TimerSetStm2Eod = Do
		}
		if TimerSetStm2Eod == Do {
			TimerSetStm2AddOneSecDo()
			if TimerSetStm2AddOneSecSecButtonReleaseCond() {
				TimerSetStm2AddOneSecSecButtonReleaseAction()
				TimerSetStm2CurrentState = TimerSetStm2TimerIdle
				TimerSetStm2Eod = Exit
			}
		}
		if TimerSetStm2Eod == Exit {
			TimerSetStm2AddOneSecExit()
			TimerSetStm2Eod = Entry
		}
	case TimerSetStm2TimerWaitRelease:
		if TimerSetStm2Eod == Entry {
			TimerSetStm2TimerWaitReleaseEntry()
			TimerSetStm2Eod = Do
		}
		if TimerSetStm2Eod == Do {
			TimerSetStm2TimerWaitReleaseDo()
		}
		if TimerSetStm2Eod == Exit {
			TimerSetStm2TimerWaitReleaseExit()
			TimerSetStm2Eod = Entry
		}
	}
}
