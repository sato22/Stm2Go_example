// This file was generated by a program.
// Please do not edit this file directly.
package mypackage

// package names to be imported

type rootStm3State uint8

const (
	rootStm3AlarmOn rootStm3State = iota
	rootStm3Countdown
	rootStm3TimerSet
)

var rootStm3Eod Eod

var rootStm3CurrentState rootStm3State

func init() {
	rootStm3Initialize()
}

func rootStm3Initialize() {
	rootStm3CurrentState = rootStm3TimerSet
}

func EntryrootStm3Task() {
	rootStm3Task()
}

func rootStm3Task() {
	switch rootStm3CurrentState {
	case rootStm3AlarmOn:
		if rootStm3Eod == Entry {
			rootStm3AlarmOnEntry()
			rootStm3Eod = Do
		}
		if rootStm3Eod == Do {
			rootStm3AlarmOnDo()
			if rootStm3AlarmOnstopButtonReleaseCond() {
				rootStm3AlarmOnstopButtonReleaseAction()
				rootStm3CurrentState = rootStm3TimerSet
				rootStm3Eod = Exit
			}
		}
		if rootStm3Eod == Exit {
			rootStm3AlarmOnExit()
			rootStm3Eod = Entry
		}
	case rootStm3Countdown:
		if rootStm3Eod == Entry {
			rootStm3CountdownEntry()
			rootStm3Eod = Do
		}
		if rootStm3Eod == Do {
			rootStm3CountdownDo()
			if rootStm3CountdowncountDownEndCond() {
				rootStm3CountdowncountDownEndAction()
				rootStm3CurrentState = rootStm3AlarmOn
				rootStm3Eod = Exit
			}
			if rootStm3CountdownstopButtonReleaseCond() {
				rootStm3CountdownstopButtonReleaseAction()
				rootStm3CurrentState = rootStm3TimerSet
				rootStm3Eod = Exit
			}
		}
		if rootStm3Eod == Exit {
			rootStm3CountdownExit()
			rootStm3Eod = Entry
		}
	case rootStm3TimerSet:
		if rootStm3Eod == Entry {
			rootStm3TimerSetEntry()
			rootStm3Eod = Do
		}
		if rootStm3Eod == Do {
			rootStm3TimerSetDo()
			if rootStm3TimerSetstartButtonReleaseCond() {
				rootStm3TimerSetstartButtonReleaseAction()
				rootStm3CurrentState = rootStm3Countdown
				rootStm3Eod = Exit
			}
		}
		if rootStm3Eod == Exit {
			rootStm3TimerSetExit()
			rootStm3Eod = Entry
		}
	}
}
