// This file was generated by a program.
package mypackage

import "fmt"

// package names to be imported

///////////////////////////////////////////////
// functions for State TimerSetStm2TimerIdle
///////////////////////////////////////////////

func displayTimerSet() {
	display.PrintVal(fmt.Sprintf("%02d : %02d", mm, ss))
}

func TimerSetStm2TimerIdleEntry() {
	if debug {
		logger.Println("Entering State TimerSetStm2TimerIdle")
	}
	displayTimerSet()
}

func TimerSetStm2TimerIdleDo() {
	// Please write a do process for State TimerSetStm2TimerIdle
}

func TimerSetStm2TimerIdleExit() {
	if debug {
		logger.Println("Leaving State TimerSetStm2TimerIdle")
	}
	// Please write an exit process for State TimerSetStm2TimerIdle
}

///////////////////////////////////////////////
// functions for State TimerSetStm2AddOneMin
///////////////////////////////////////////////

func addMinute() {
	mm++
	if mm == 60 {
		mm = 0
	}
	displayTimerSet()
}

func addSecond() {
	ss++
	if ss == 60 {
		ss = 0
	}
	displayTimerSet()
}

func TimerSetStm2AddOneMinEntry() {
	if debug {
		logger.Println("Entering State TimerSetStm2AddOneMin")
	}
	addMinute()
}

func TimerSetStm2AddOneMinDo() {
	// Please write a do process for State TimerSetStm2AddOneMin
}

func TimerSetStm2AddOneMinExit() {
	if debug {
		logger.Println("Leaving State TimerSetStm2AddOneMin")
	}
	// Please write an exit process for State TimerSetStm2AddOneMin
}

///////////////////////////////////////////////
// functions for State TimerSetStm2AddOneSec
///////////////////////////////////////////////

func TimerSetStm2AddOneSecEntry() {
	if debug {
		logger.Println("Entering State TimerSetStm2AddOneSec")
	}
	addSecond()
}

func TimerSetStm2AddOneSecDo() {
	// Please write a do process for State TimerSetStm2AddOneSec
}

func TimerSetStm2AddOneSecExit() {
	if debug {
		logger.Println("Leaving State TimerSetStm2AddOneSec")
	}
	// Please write an exit process for State TimerSetStm2AddOneSec
}

///////////////////////////////////////////////
// functions for State TimerSetStm2TimerWaitRelease
///////////////////////////////////////////////

func TimerSetStm2TimerWaitReleaseEntry() {
	if debug {
		logger.Println("Entering State TimerSetStm2TimerWaitRelease")
	}
	// Please write an enter process for State TimerSetStm2TimerWaitRelease
}

func TimerSetStm2TimerWaitReleaseDo() {
	// Please write a do process for State TimerSetStm2TimerWaitRelease
}

func TimerSetStm2TimerWaitReleaseExit() {
	if debug {
		logger.Println("Leaving State TimerSetStm2TimerWaitRelease")
	}
	// Please write an exit process for State TimerSetStm2TimerWaitRelease
}

///////////////////////////////////////////////
// Conditions
///////////////////////////////////////////////

func TimerSetStm2TimerIdleSecButtonPushCond() bool {
	return !buttonM.Get()
}

func TimerSetStm2TimerIdlestartButtonPushCond() bool {
	return !buttonR.Get()
}

func TimerSetStm2TimerIdleMinButtonPushCond() bool {
	return !buttonL.Get()
}

func TimerSetStm2AddOneMinMinButtonReleaseCond() bool {
	return buttonL.Get()
}

func TimerSetStm2AddOneSecSecButtonReleaseCond() bool {
	return buttonM.Get()
}

///////////////////////////////////////////////
// Actions
///////////////////////////////////////////////

func TimerSetStm2TimerIdleSecButtonPushAction() {
	// Please edit the action when SecButtonPush occurs at State TimerIdle
}

func TimerSetStm2TimerIdlestartButtonPushAction() {
	// Please edit the action when startButtonPush occurs at State TimerIdle
}

func TimerSetStm2TimerIdleMinButtonPushAction() {
	// Please edit the action when MinButtonPush occurs at State TimerIdle
}

func TimerSetStm2AddOneMinMinButtonReleaseAction() {
	// Please edit the action when MinButtonRelease occurs at State AddOneMin
}

func TimerSetStm2AddOneSecSecButtonReleaseAction() {
	// Please edit the action when SecButtonRelease occurs at State AddOneSec
}
