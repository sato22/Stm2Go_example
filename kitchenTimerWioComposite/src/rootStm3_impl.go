// This file was generated by a program.
package mypackage

// package names to be imported

///////////////////////////////////////////////
// functions for State rootStm3AlarmOn
///////////////////////////////////////////////

func rootStm3AlarmOnEntry() {
	AlarmOnStm0Initialize() // Call the initialize for AlarmOnStm0
	if debug {
		logger.Println("Entering State rootStm3AlarmOn")
	}
	// Please write an enter process for State rootStm3AlarmOn
}

func rootStm3AlarmOnDo() {
	AlarmOnStm0Task() // Call the task for AlarmOnStm0
	// Please write a do process for State rootStm3AlarmOn
}

func rootStm3AlarmOnExit() {
	if debug {
		logger.Println("Leaving State rootStm3AlarmOn")
	}
	// Please write an exit process for State rootStm3AlarmOn
}

///////////////////////////////////////////////
// functions for State rootStm3Countdown
///////////////////////////////////////////////

func rootStm3CountdownEntry() {
	CountdownStm1Initialize() // Call the initialize for CountdownStm1
	if debug {
		logger.Println("Entering State rootStm3Countdown")
	}
	// Please write an enter process for State rootStm3Countdown
}

func rootStm3CountdownDo() {
	CountdownStm1Task() // Call the task for CountdownStm1
	// Please write a do process for State rootStm3Countdown
}

func rootStm3CountdownExit() {
	if debug {
		logger.Println("Leaving State rootStm3Countdown")
	}
	// Please write an exit process for State rootStm3Countdown
}

///////////////////////////////////////////////
// functions for State rootStm3TimerSet
///////////////////////////////////////////////

func rootStm3TimerSetEntry() {
	TimerSetStm2Initialize() // Call the initialize for TimerSetStm2
	if debug {
		logger.Println("Entering State rootStm3TimerSet")
	}
	// Please write an enter process for State rootStm3TimerSet
}

func rootStm3TimerSetDo() {
	TimerSetStm2Task() // Call the task for TimerSetStm2
	// Please write a do process for State rootStm3TimerSet
}

func rootStm3TimerSetExit() {
	if debug {
		logger.Println("Leaving State rootStm3TimerSet")
	}
	// Please write an exit process for State rootStm3TimerSet
}

///////////////////////////////////////////////
// Conditions
///////////////////////////////////////////////

func rootStm3AlarmOnstopButtonReleaseCond() bool {
	return (AlarmOnStm0CurrentState == AlarmOnStm0AlarmOnWaitRelease) && buttonR.Get()
}

func rootStm3CountdowncountDownEndCond() bool {
	return (ss == 0 && mm == 0)
}

func rootStm3CountdownstopButtonReleaseCond() bool {
	return (CountdownStm1CurrentState == CountdownStm1CountdownWaitRelease) && buttonR.Get()
}

func rootStm3TimerSetstartButtonReleaseCond() bool {
	return (TimerSetStm2CurrentState == TimerSetStm2TimerWaitRelease) && buttonR.Get()
}

///////////////////////////////////////////////
// Actions
///////////////////////////////////////////////

func rootStm3AlarmOnstopButtonReleaseAction() {
	// Please edit the action when stopButtonRelease occurs at State AlarmOn
}

func rootStm3CountdowncountDownEndAction() {
	// Please edit the action when countDownEnd occurs at State Countdown
}

func rootStm3CountdownstopButtonReleaseAction() {
	// Please edit the action when stopButtonRelease occurs at State Countdown
}

func rootStm3TimerSetstartButtonReleaseAction() {
	// Please edit the action when startButtonRelease occurs at State TimerSet
}
