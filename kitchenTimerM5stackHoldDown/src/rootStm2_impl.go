// This file was generated by a program.
package mypackage

// package names to be imported

///////////////////////////////////////////////
// functions for State rootStm2AlarmOn
///////////////////////////////////////////////

func rootStm2AlarmOnEntry() {
	AlarmOnStm3Initialize() // Call the initialize for AlarmOnStm0
	if debug {
		logger.Println("Entering State rootStm2AlarmOn")
	}
	// Please write an enter process for State rootStm2AlarmOn
}

func rootStm2AlarmOnDo() {
	AlarmOnStm3Task() // Call the task for AlarmOnStm0
	// Please write a do process for State rootStm2AlarmOn
}

func rootStm2AlarmOnExit() {
	if debug {
		logger.Println("Leaving State rootStm2AlarmOn")
	}
	// Please write an exit process for State rootStm2AlarmOn
}

///////////////////////////////////////////////
// functions for State rootStm2Countdown
///////////////////////////////////////////////

func rootStm2CountdownEntry() {
	CountdownStm0Initialize() // Call the initialize for CountdownStm1
	if debug {
		logger.Println("Entering State rootStm2Countdown")
	}
	// Please write an enter process for State rootStm2Countdown
}

func rootStm2CountdownDo() {
	CountdownStm0Task() // Call the task for CountdownStm1
	// Please write a do process for State rootStm2Countdown
}

func rootStm2CountdownExit() {
	if debug {
		logger.Println("Leaving State rootStm2Countdown")
	}
	// Please write an exit process for State rootStm2Countdown
}

///////////////////////////////////////////////
// functions for State rootStm2TimerSet
///////////////////////////////////////////////

func rootStm2TimerSetEntry() {
	TimerSetStm1Initialize() // Call the initialize for TimerSetStm2
	if debug {
		logger.Println("Entering State rootStm2TimerSet")
	}
	// Please write an enter process for State rootStm2TimerSet
}

func rootStm2TimerSetDo() {
	TimerSetStm1Task() // Call the task for TimerSetStm2
	// Please write a do process for State rootStm2TimerSet
}

func rootStm2TimerSetExit() {
	if debug {
		logger.Println("Leaving State rootStm2TimerSet")
	}
	// Please write an exit process for State rootStm2TimerSet
}

///////////////////////////////////////////////
// Conditions
///////////////////////////////////////////////

func rootStm2AlarmOnstopButtonReleaseCond() bool {
	return (AlarmOnStm3CurrentState == AlarmOnStm3AlarmOnWaitRelease) && rRelease
}

func rootStm2CountdowncountDownEndCond() bool {
	return (ss == 0 && mm == 0)
}

func rootStm2CountdownstopButtonReleaseCond() bool {
	return (CountdownStm0CurrentState == CountdownStm0CountdownWaitRelease) && rRelease
}

func rootStm2TimerSetstartButtonReleaseCond() bool {
	return (TimerSetStm1CurrentState == TimerSetStm1TimerWaitRelease) && rRelease
}

///////////////////////////////////////////////
// Actions
///////////////////////////////////////////////

func rootStm2AlarmOnstopButtonReleaseAction() {
	// Please edit the action when stopButtonRelease occurs at State AlarmOn
}

func rootStm2CountdowncountDownEndAction() {
	// Please edit the action when countDownEnd occurs at State Countdown
}

func rootStm2CountdownstopButtonReleaseAction() {
	// Please edit the action when stopButtonRelease occurs at State Countdown
}

func rootStm2TimerSetstartButtonReleaseAction() {
	// Please edit the action when startButtonRelease occurs at State TimerSet
}
