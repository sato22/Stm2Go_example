// This file was generated by a program.
package mypackage

import (
	"fmt"
	"image/color"
)

// package names to be imported

type Eod uint8

const (
	Entry Eod = iota
	Do
	Exit
)

type DebugLogger interface {
	Println(string)
}

var logger DebugLogger

func ConfigureLog(p DebugLogger) {
	logger = p
}

const (
	debug = true
)

const (
	countSecond = 14
)

type Switch interface {
	Get() bool
}

var buttonL Switch
var buttonM Switch
var buttonR Switch

var lRelease bool
var mRelease bool
var rRelease bool

func ConfigureLeftButton(s Switch) {
	buttonL = s
}

func ConfigureMiddleButton(s Switch) {
	buttonM = s
}

func ConfigureRightButton(s Switch) {
	buttonR = s
}

// interface Monitor
// ディスプレイに文字が表示され、表示が更新されることを確認するためのインターフェース
type Monitor interface {
	PrintVal(string)
}

var display Monitor

func ConfigureMonitor(m Monitor) {
	display = m
}

// interface Alarm
// アラームがなることを確認するためのインターフェース
type Alarm interface {
	Beep()
	Mute()
}

var alarm Alarm

func ConfigureAlarm(a Alarm) {
	alarm = a
}

var mm int = 0
var ss int = 0

// var inputEnabled bool = true

var count int = 0
var countHold int = 0

func addMinute() {
	mm++
	if mm == 60 {
		mm = 0
	}
}

func addSecond() {
	ss++
	if ss == 60 {
		ss = 0
	}
}

func displayTime() {
	display.PrintVal(fmt.Sprintf("%02d : %02d", mm, ss))
}

func countDown() {
	ss--
	if ss == -1 {
		if mm == 0 {
			ss = 0
		} else {
			ss = 59
			mm--
		}
	}
}

///////////////////////////////////////////////
// functions for PrintVal(main)
///////////////////////////////////////////////

type Label struct {
	Buf  []uint16
	W, H int16
}

func NewLabel(w, h int16) *Label {
	return &Label{
		Buf: make([]uint16, w*h),
		W:   w,
		H:   h,
	}
}

func (l *Label) Display() error {
	return nil
}

func (l *Label) Size() (x, y int16) {
	return l.W, l.H
}

func (l *Label) SetPixel(x, y int16, c color.RGBA) {
	l.Buf[x+y*l.W] = RGBATo565(c)
}

func (l *Label) FillScreen(c color.RGBA) {
	for i := range l.Buf {
		l.Buf[i] = RGBATo565(c)
	}
}

func RGBATo565(c color.RGBA) uint16 {
	r, g, b, _ := c.RGBA()

	return uint16((r & 0xF800) +
		((g & 0xFC00) >> 5) +
		((b & 0xF800) >> 11))
}
